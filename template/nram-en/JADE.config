variable
{
	//info
	workers threads()+1
    seed date("%S%H%d%m%Y")

	//dataset
    batch 1000
    batch_size $batch
    batch_offset $batch
	validation true

	//denn
    gens 1000
    sub_gens 5
    clamp 1
    rand 1
	mutation curr_p_best
	crossover bin
    np 100

    //nram 
    task copy
    registers 4
    max_int 0
    time_steps 0
	sequence_size $time_steps
    gates "read zero one two inc add sub dec lt let eq min max write"
    
	//curriculum
	step_change_difficulty 100
	mse_difficulty 0.05
	
	//output
    output "nram_lshade.json"
    stream "::cout"
}

//Init
args 
{
   //threads and seed
   threads_pop $workers
   seed $seed
   output "results/" + $output
   runtime_output_file $stream
}

// nram_enhanced
args
{
   instance nram_enhanced
   task $task
   max_int $max_int
   n_registers $registers
   time_steps $time_steps
   gates $gates
   //curriculum learning
   step_gen_change_difficulty $step_change_difficulty
   change_difficulty_lambda $mse_difficulty
   sequence_size $sequence_size
}

//Batch info
args
{
   batch_size $batch_size
   batch_offset $batch_offset
   use_validation $validation 
   compute_test_per_pass false
   reval_pop_on_batch true
}

network 
{
    lp 260 relu 
    lp 260 relu
}

//DE Params
args 
{
    //generations + np
    generations $gens
    sub_gens $sub_gens
    number_parents $np

    //init individuals
    clamp_max  $clamp
    clamp_min  -$clamp
    random_max  $rand
    random_min  -$rand
   
    //DE type
    evolution_method "JADE"
    {
		//shade
		archive_size 1000
		//f_cr_adapt 0.5??
		
		//default value for DEGL
		mutation DEGL 
		{
			degl_neighborhood 5
		}
		
		//mutation chosen by user
        mutation $mutation
        //crossover
        crossover $crossover
    }
}

