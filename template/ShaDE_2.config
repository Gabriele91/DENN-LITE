variable
{
	/* info */
	workers threads()+1
    seed date("%S%H%d%m%Y")
	/* dataset */
    batch 100
    batch_size $batch
    batch_offset $batch / 2
    input "../DENN-dataset-samples/DATASETS/d_06_01_2018/mnist_normalized.gz"
    //input "test.gz"
	validation true
	/* denn */
    gens 500
    sub_gens $batch / 10
    
    clrn 1
    clamp $clrn
    rand $clrn

    clrn_offset 0
    clamp_offset $clrn_offset
    rand_offset $clrn_offset
    
    np_factor 1
    np (28*28)*$np_factor
    mutation "curr_p_best"
	crossover bin
	/* output */
    output "SahDE_2.json" 
    stream "::cout"
    /* compute test */
    compute_test_per_pass false
}

/* Init */ 
args 
{
   //threads and seed
   threads_pop $workers
   seed $seed
   output "results/" + $output
   runtime_output_file $stream
}

/* Batch info */
args
{
   dataset $input
   batch_size $batch_size
   batch_offset $batch_offset
   use_validation $validation 
   compute_test_per_pass $compute_test_per_pass
   reval_pop_on_batch true
}

network
{
    //lp 78 relu
    lr 40 10 linear  /* in 28*28 -> out 20 */
    //lp 20 linear
    out softmax     /* in 28-> to n class */
}

//DE Params
args 
{
    /* generations + np */
    generations $gens
    sub_gens $sub_gens
    number_parents $np

    /* init individuals */
    clamp_max  $clamp+$clamp_offset
    clamp_min  -$clamp+$clamp_offset
    random_max  $rand+$rand_offset
    random_min  -$rand+$rand_offset
   
    /* DE type */
    evolution_method "ShaDE" 
    {
		/* shade */
		archive_size 1000
		shade_h $sub_gens*$np
		/* DEGL default 5 */
        mutation $mutation
        /* crossover */
        crossover $crossover
    }
}
